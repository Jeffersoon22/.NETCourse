
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@model Game
<h1>Add a game</h1>

<form action="@Url.Action("Index")" method="post">
    <div class="form-group">
        @Html.LabelFor(x => x.Name)
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control"})
        <div class="valid-feedback">
            @Html.ValidationMessageFor(x => x.Name)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Price)
        @Html.TextBoxFor(x => x.Price, new { @class = "form-control"})
        <div class="valid-feedback">
            @Html.ValidationMessageFor(model => model.Price)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.ReleaseDate)
        @Html.TextBoxFor(x => x.ReleaseDate, new { @class = "form-control"})
        <div class="valid-feedback">
            @Html.ValidationMessageFor(model => model.ReleaseDate)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Genre)
        @Html.TextBoxFor(x => x.Genre, new { @class = "form-control"})
        <div class="valid-feedback">
            @Html.ValidationMessageFor(model => model.Genre)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Rating)
        @Html.TextBoxFor(x => x.Rating, new { @class = "form-control"})
        <div class="valid-feedback">
            @Html.ValidationMessageFor(model => model.Rating)
        </div>
    </div>

    @Html.ValidationSummary()
    <button type="submit" class="btn btn-primary">Add new Game</button>
</form>

@section Scripts
{ 
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }    
}